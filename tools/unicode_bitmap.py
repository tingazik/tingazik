import base64
import textwrap
source = """
111111110101010001111101010111110011101011001111000100001101100100001001001100001100011111010101111100111111101000101001
111111110101010001111101010111110011101011001111000100001101100100001001001100001100011111010101111100111111101000101001
111111110101010001111110101000111011111000100010110111001011001000001111010011100111011110101001000000111111101000101001
111111110101010001111110101000111011111000100010110111001011001000001111010011100111011110101001000000111111101000101001
111111110101010001010100111100000010000111101000010110110001011110001000011110100001011101010001111110111111101000101001
111111110101010001010100111100000010000111101000010110110001011110001000011110100001011101010001111110111111101000101001
111111110101010001101011110011111010011011001000000110000101000011001011011111011110011010111100111110111111101000101001
111111110101010001101011110011111010011011001000000110000101000011001011011111011110011010111100111110111111101000101001
111111110101010001110101110000110011110010101000000110001000111101101110010110010000011110101110011100111111101000101001
111111110101010001110101110000110011110010101000000110001000111101101110010110010000011110101110011100111111101000101001
111111110101010001111101011110110011111101000110100111111000101100101000001100101110011101011111010000111111101000101001
111111110101010001111101011110110011111101000110100111111000101100101000001100101110011101011111010000111111101000101001
111111110101010001110100111011111010001000111011100100001001000010001100110000110011011101001110111110111111101000101001
111111110101010001110100111011111010001000111011100100001001000010001100110000110011011101001110111110111111101000101001
111111110101010001111101001011000011110010001100110101100111110100001011110100011110010101111110111000111111101000101001
111111110101010001111101001011000011110010001100110101100111110100001011110100011110010101111110111000111111101000101001
"""

source = """
111111110101010001111010101111000011101010001110000110000010010110001101000111011110011111010101111100111111101000101001
111111110101010001111010101111000011101010001110000110000010010110001101000111011110011111010101111100111111101000101001
111111110101010001111110101000111011100000100011010111010111000011001011111101011000011111101010111000111111101000101001
111111110101010001111110101000111011100000100011010111010111000011001011111101011000011111101010111000111111101000101001
111111110101010001010100111100000011000111110010010110110100001111001001101000111000011101010001111110111111101000101001
111111110101010001010100111100000011000111110010010110110100001111001001101000111000011101010001111110111111101000101001
111111110101010001010111100111100011100100010111000100001101101000001011101111001100011010111100111110111111101000101001
111111110101010001010111100111100011100100010111000100001101101000001011101111001100011010111100111110111111101000101001
111111110101010001110101110000110010111111010011000111100010100001001100110111100100011101011100110000111111101000101001
111111110101010001110101110000110010111111010011000111100010100001001100110111100100011101011100110000111111101000101001
"""

mapping = {
    "": 0xA0,
    "1": 0x1FB00,
    "2": 0x1FB01,
    "12": 0x1FB02,
    "3": 0x1FB03,
    "13": 0x1FB04,
    "23": 0x1FB05,
    "123": 0x1FB06,
    "4": 0x1FB07,
    "14": 0x1FB08,
    "24": 0x1FB09,
    "124": 0x1FB0A,
    "34": 0x1FB0B,
    "134": 0x1FB0C,
    "234": 0x1FB0D,
    "1234": 0x1FB0E,
    "5": 0x1FB0F,
    "15": 0x1FB10,
    "25": 0x1FB11,
    "125": 0x1FB12,
    "35": 0x1FB13,
    "235": 0x1FB14,
    "1235": 0x1FB15,
    "45": 0x1FB16,
    "145": 0x1FB17,
    "245": 0x1FB18,
    "1245": 0x1FB19,
    "345": 0x1FB1A,
    "1345": 0x1FB1B,
    "2345": 0x1FB1C,
    "12345": 0x1FB1D,
    "6": 0x1FB1E,
    "16": 0x1FB1F,
    "26": 0x1FB20,
    "126": 0x1FB21,
    "36": 0x1FB22,
    "136": 0x1FB23,
    "236": 0x1FB24,
    "1236": 0x1FB25,
    "46": 0x1FB26,
    "146": 0x1FB27,
    "1246": 0x1FB28,
    "346": 0x1FB29,
    "1346": 0x1FB2A,
    "2346": 0x1FB2B,
    "12346": 0x1FB2C,
    "56": 0x1FB2D,
    "156": 0x1FB2E,
    "256": 0x1FB2F,
    "1256": 0x1FB30,
    "356": 0x1FB31,
    "1356": 0x1FB32,
    "2356": 0x1FB33,
    "12356": 0x1FB34,
    "456": 0x1FB35,
    "1456": 0x1FB36,
    "2456": 0x1FB37,
    "12456": 0x1FB38,
    "3456": 0x1FB39,
    "13456": 0x1FB3A,
    "23456": 0x1FB3B,
    "123456": 0x2588,
    "135": 0x258C,
    "246": 0x2590,
}

s = source.strip().splitlines()
if len(s[0]) % 2 != 0:
    s = [i + "0" for i in s]

if len(s) % 3 != 0:
    s += ["0" * len(s[0])] * (3 - (len(s) % 3))

rows = []
for i in range(0, len(s), 3):
    s_rows = s[i:i+3]
    row = ""
    for j in range(0, len(s_rows[0]), 2):
        index = ""
        if s_rows[0][j] == "1": index += "1"
        if s_rows[0][j + 1] == "1": index += "2"
        if s_rows[1][j] == "1": index += "3"
        if s_rows[1][j + 1] == "1": index += "4"
        if s_rows[2][j] == "1": index += "5"
        if s_rows[2][j + 1] == "1": index += "6"
        row += chr(mapping[index])
    rows.append(row)

output = "\n".join(rows)
print(output)
print()
print(textwrap.fill(base64.b64encode(output.encode()).decode()))